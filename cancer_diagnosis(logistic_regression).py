# -*- coding: utf-8 -*-
"""Cancer Diagnosis(Logistic Regression)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17NDmBIT43SoUH2aD0I5DmSj5g7ywxyKB
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv('data.csv')
print(df.head())

df.shape

df.info()

df.describe()

sns.heatmap(df.isnull())

df.drop(['Unnamed: 32', 'id'], axis = 1, inplace = True)
df.head()

df.diagnosis = [1 if value == 'M' else 0 for value in df.diagnosis]
df.head()

df['diagnosis']= df['diagnosis'].astype('category', copy = False)
df['diagnosis'].value_counts().plot(kind = 'bar')

df.info()

y = df['diagnosis']
X = df.drop(['diagnosis'], axis = 1)

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

X_scaled = scaler.fit_transform(X)

print(X_scaled)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size = 0.3, random_state = 42)

from sklearn.linear_model import LogisticRegression

lr = LogisticRegression()
lr.fit(X_train, y_train)

y_pred = lr.predict(X_test)

## Evaluation of the model

from sklearn.metrics import accuracy_score

accuracy = accuracy_score(y_test, y_pred)

print(f'Accuracy score for the model is: {accuracy: .2f}')

from sklearn.metrics import classification_report

print(classification_report(y_test, y_pred))

## Other models

from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC

rf = RandomForestClassifier(random_state=42)
rf.fit(X_train, y_train)
print("RF Accuracy:", accuracy_score(y_test, rf.predict(X_test)))

svm = SVC(probability=True)
svm.fit(X_train, y_train)
print("SVM Accuracy:", accuracy_score(y_test, svm.predict(X_test)))

## confusion matrix

from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay

cm = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=cm)
disp.plot()
plt.show()